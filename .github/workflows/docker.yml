name: CI/CD using GitHub Actions & Docker # GitHub Actions에서 이 워크플로우를 식별하는 이름


on:
  push:
    branches: ["main"]   # main 브랜치에 push될 때 워크플로우 실행
  pull_request:
    branches: ["main"]   # main 브랜치에 PR이 생성되거나 변경될 때도 워크플로우 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # GitHub 저장소의 코드를 runner 환경에 체크아웃
        # 이후 Docker build나 파일 복사 등에서 소스코드 접근 가능하게 함

      - name: "Debug: List workspace files"
        run: ls -al $GITHUB_WORKSPACE
        # 현재 워크스페이스의 파일 목록을 출력 (디버깅 용도)
        # 코드가 정상적으로 체크아웃되었는지 확인할 수 있음

      - name: Docker build & push to Docker Hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f $GITHUB_WORKSPACE/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/snake-game $GITHUB_WORKSPACE
          docker push ${{ secrets.DOCKER_USERNAME }}/snake-game

          # Docker Hub에 로그인 → 애플리케이션 이미지를 빌드하고 → Docker Hub에 푸시
          # 이를 통해 EC2 서버에서도 동일한 이미지를 다운로드하여 실행 가능하게 함

      - name: Upload project files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/home/ubuntu/snake-game-ci-cd"

          # 현재 워크플로우의 모든 파일을 EC2 서버로 복사
          # SSH 키 기반 인증을 사용하며, 지정된 경로에 저장

      - name: Deploy with docker-compose (preserving DB data)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/snake-game-ci-cd
            # 컨테이너 중지 및 삭제 (볼륨은 유지 → 기존 DB 데이터 보존)
            docker-compose down || true
            docker-compose up -d --build
            docker image prune -a -f || true

            # EC2에 SSH로 접속 후, 해당 경로에서 Docker Compose로 배포 진행
            # 기존 컨테이너 중지 후 새 이미지로 재빌드 및 실행
            # 사용되지 않는 Docker 이미지는 정리하여 디스크 공간 확보
